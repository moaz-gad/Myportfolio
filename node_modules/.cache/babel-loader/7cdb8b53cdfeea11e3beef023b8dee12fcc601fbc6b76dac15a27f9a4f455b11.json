{"ast":null,"code":"/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n */\n\nimport camelizeStyleName from 'fbjs/lib/camelizeStyleName';\nimport dangerousStyleValue from './dangerousStyleValue';\nimport hyphenateStyleName from 'fbjs/lib/hyphenateStyleName';\nimport memoizeStringOnly from 'fbjs/lib/memoizeStringOnly';\nimport warning from 'fbjs/lib/warning';\nvar processStyleName = memoizeStringOnly(hyphenateStyleName);\nif (process.env.NODE_ENV !== 'production') {\n  var warnValidStyle;\n  (function () {\n    // 'msTransform' is correct, but the other prefixes should be capitalized\n    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n    // style values shouldn't contain a semicolon\n    var badStyleValueWithSemicolonPattern = /;\\s*$/;\n    var warnedStyleNames = {};\n    var warnedStyleValues = {};\n    var warnedForNaNValue = false;\n    var warnHyphenatedStyleName = function warnHyphenatedStyleName(name, owner) {\n      if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n        return;\n      }\n      warnedStyleNames[name] = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n    };\n    var warnBadVendoredStyleName = function warnBadVendoredStyleName(name, owner) {\n      if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n        return;\n      }\n      warnedStyleNames[name] = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n    };\n    var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value, owner) {\n      if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n        return;\n      }\n      warnedStyleValues[value] = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n    };\n    var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value, owner) {\n      if (warnedForNaNValue) {\n        return;\n      }\n      warnedForNaNValue = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n    };\n    var checkRenderMessage = function checkRenderMessage(owner) {\n      if (owner) {\n        var name = owner.getName();\n        if (name) {\n          return ' Check the render method of `' + name + '`.';\n        }\n      }\n      return '';\n    };\n\n    /**\n     * @param {string} name\n     * @param {*} value\n     * @param {ReactDOMComponent} component\n     */\n\n    warnValidStyle = function warnValidStyle(name, value, component) {\n      //eslint-disable-line no-var\n      var owner = void 0;\n      if (component) {\n        owner = component._currentElement._owner;\n      }\n      if (name.indexOf('-') > -1) {\n        warnHyphenatedStyleName(name, owner);\n      } else if (badVendoredStyleNamePattern.test(name)) {\n        warnBadVendoredStyleName(name, owner);\n      } else if (badStyleValueWithSemicolonPattern.test(value)) {\n        warnStyleValueWithSemicolon(name, value, owner);\n      }\n      if (typeof value === 'number' && isNaN(value)) {\n        warnStyleValueIsNaN(name, value, owner);\n      }\n    };\n  })();\n}\n\n/**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   * @return {?string}\n   */\n\nexport function createMarkupForStyles(styles, component) {\n  var serialized = '';\n  for (var styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n    var styleValue = styles[styleName];\n    if (process.env.NODE_ENV !== 'production') {\n      warnValidStyle(styleName, styleValue, component);\n    }\n    if (styleValue != null) {\n      serialized += processStyleName(styleName) + ':';\n      serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n    }\n  }\n  return serialized || null;\n}","map":{"version":3,"names":["camelizeStyleName","dangerousStyleValue","hyphenateStyleName","memoizeStringOnly","warning","processStyleName","process","env","NODE_ENV","warnValidStyle","badVendoredStyleNamePattern","badStyleValueWithSemicolonPattern","warnedStyleNames","warnedStyleValues","warnedForNaNValue","warnHyphenatedStyleName","name","owner","hasOwnProperty","checkRenderMessage","warnBadVendoredStyleName","charAt","toUpperCase","slice","warnStyleValueWithSemicolon","value","replace","warnStyleValueIsNaN","getName","component","_currentElement","_owner","indexOf","test","isNaN","createMarkupForStyles","styles","serialized","styleName","styleValue"],"sources":["C:/Users/Hamada/Desktop/React-portfolios/New folder/portfolio/node_modules/glamor/es6/CSSPropertyOperations/index.js"],"sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n */\n\nimport camelizeStyleName from 'fbjs/lib/camelizeStyleName';\nimport dangerousStyleValue from './dangerousStyleValue';\nimport hyphenateStyleName from 'fbjs/lib/hyphenateStyleName';\nimport memoizeStringOnly from 'fbjs/lib/memoizeStringOnly';\nimport warning from 'fbjs/lib/warning';\n\nvar processStyleName = memoizeStringOnly(hyphenateStyleName);\n\nif (process.env.NODE_ENV !== 'production') {\n  var warnValidStyle;\n\n  (function () {\n    // 'msTransform' is correct, but the other prefixes should be capitalized\n    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n    // style values shouldn't contain a semicolon\n    var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n    var warnedStyleNames = {};\n    var warnedStyleValues = {};\n    var warnedForNaNValue = false;\n\n    var warnHyphenatedStyleName = function warnHyphenatedStyleName(name, owner) {\n      if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n        return;\n      }\n\n      warnedStyleNames[name] = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n    };\n\n    var warnBadVendoredStyleName = function warnBadVendoredStyleName(name, owner) {\n      if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n        return;\n      }\n\n      warnedStyleNames[name] = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n    };\n\n    var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value, owner) {\n      if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n        return;\n      }\n\n      warnedStyleValues[value] = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n    };\n\n    var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value, owner) {\n      if (warnedForNaNValue) {\n        return;\n      }\n\n      warnedForNaNValue = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n    };\n\n    var checkRenderMessage = function checkRenderMessage(owner) {\n      if (owner) {\n        var name = owner.getName();\n        if (name) {\n          return ' Check the render method of `' + name + '`.';\n        }\n      }\n      return '';\n    };\n\n    /**\n     * @param {string} name\n     * @param {*} value\n     * @param {ReactDOMComponent} component\n     */\n\n    warnValidStyle = function warnValidStyle(name, value, component) {\n      //eslint-disable-line no-var\n      var owner = void 0;\n      if (component) {\n        owner = component._currentElement._owner;\n      }\n      if (name.indexOf('-') > -1) {\n        warnHyphenatedStyleName(name, owner);\n      } else if (badVendoredStyleNamePattern.test(name)) {\n        warnBadVendoredStyleName(name, owner);\n      } else if (badStyleValueWithSemicolonPattern.test(value)) {\n        warnStyleValueWithSemicolon(name, value, owner);\n      }\n\n      if (typeof value === 'number' && isNaN(value)) {\n        warnStyleValueIsNaN(name, value, owner);\n      }\n    };\n  })();\n}\n\n/**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   * @return {?string}\n   */\n\nexport function createMarkupForStyles(styles, component) {\n  var serialized = '';\n  for (var styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n    var styleValue = styles[styleName];\n    if (process.env.NODE_ENV !== 'production') {\n      warnValidStyle(styleName, styleValue, component);\n    }\n    if (styleValue != null) {\n      serialized += processStyleName(styleName) + ':';\n      serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n    }\n  }\n  return serialized || null;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}