{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n// forked from https://www.npmjs.com/package/auto-prefixer\n\nfunction capitalize(str) {\n  return str && str.charAt(0).toUpperCase() + str.substring(1);\n}\nfunction includes(obj, search) {\n  if (typeof obj === 'number') {\n    obj = obj.toString();\n  }\n  return obj.indexOf(search) !== -1;\n}\nfunction values(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\nvar webkitPrefix = 'Webkit';\nvar mozPrefix = 'Moz';\nvar msPrefix = 'ms';\nvar oPrefix = 'o';\nvar webkit = [webkitPrefix];\nvar webkitO = [webkitPrefix, oPrefix];\nvar moz = [mozPrefix];\nvar ms = [msPrefix];\nvar webkitMoz = [webkitPrefix, mozPrefix];\nvar webkitMozO = [webkitPrefix, mozPrefix, oPrefix];\nvar webkitMozMs = [webkitPrefix, mozPrefix, msPrefix];\nvar webkitMs = [webkitPrefix, msPrefix];\nvar allPrefixes = [webkitPrefix, msPrefix, mozPrefix, oPrefix];\nvar neededRules = {\n  alignContent: webkit,\n  alignItems: webkit,\n  alignSelf: webkit,\n  animation: webkitMoz,\n  animationDelay: webkitMoz,\n  animationDirection: webkitMoz,\n  animationDuration: webkitMoz,\n  animationFillMode: webkitMoz,\n  animationIterationCount: webkitMoz,\n  animationName: webkitMoz,\n  animationPlayState: webkitMoz,\n  animationTimingFunction: webkitMoz,\n  appearance: webkitMoz,\n  backfaceVisibility: webkitMoz,\n  backgroundClip: webkit,\n  borderImage: webkitMozO,\n  borderImageSlice: webkitMozO,\n  boxShadow: webkitMozMs,\n  boxSizing: webkitMoz,\n  clipPath: webkit,\n  columns: webkitMoz,\n  cursor: webkitMoz,\n  flex: webkitMs,\n  //new flex and 2012 specification , no support for old specification\n  flexBasis: webkitMs,\n  flexDirection: webkitMs,\n  flexFlow: webkitMs,\n  flexGrow: webkitMs,\n  flexShrink: webkitMs,\n  flexWrap: webkitMs,\n  fontSmoothing: webkitMoz,\n  justifyContent: webkitMoz,\n  order: webkitMoz,\n  perspective: webkitMoz,\n  perspectiveOrigin: webkitMoz,\n  transform: webkitMozMs,\n  transformOrigin: webkitMozMs,\n  transformOriginX: webkitMozMs,\n  transformOriginY: webkitMozMs,\n  transformOriginZ: webkitMozMs,\n  transformStyle: webkitMozMs,\n  transition: webkitMozMs,\n  transitionDelay: webkitMozMs,\n  transitionDuration: webkitMozMs,\n  transitionProperty: webkitMozMs,\n  transitionTimingFunction: webkitMozMs,\n  userSelect: webkitMozMs\n};\nvar neededCssValues = {\n  calc: webkitMoz,\n  flex: webkitMs\n};\nvar clientPrefix = function () {\n  if (typeof navigator === 'undefined') {\n    //in server rendering\n    return allPrefixes; //also default when not passing true to 'all vendors' explicitly\n  }\n\n  var sUsrAg = navigator.userAgent;\n  if (includes(sUsrAg, 'Chrome')) {\n    return webkit;\n  } else if (includes(sUsrAg, 'Safari')) {\n    return webkit;\n  } else if (includes(sUsrAg, 'Opera')) {\n    return webkitO;\n  } else if (includes(sUsrAg, 'Firefox')) {\n    return moz;\n  } else if (includes(sUsrAg, 'MSIE')) {\n    return ms;\n  }\n  return [];\n}();\nfunction checkAndAddPrefix(styleObj, key, val, allVendors) {\n  var oldFlex = true;\n  function valueWithPrefix(cssVal, prefix) {\n    return includes(val, cssVal) && (allVendors || includes(clientPrefix, prefix)) ? val.replace(cssVal, ['', prefix.toLowerCase(), cssVal].join('-')) : null;\n    //example return -> 'transition: -webkit-transition'\n  }\n\n  function createObjectOfValuesWithPrefixes(cssVal) {\n    return neededCssValues[cssVal].reduce(function (o, v) {\n      o[v.toLowerCase()] = valueWithPrefix(cssVal, v);\n      return o;\n    }, {});\n    //example return -> {webkit: -webkit-calc(10% - 1px), moz: -moz-calc(10% - 1px)}\n  }\n\n  function composePrefixedValues(objOfPrefixedValues) {\n    var composed = values(objOfPrefixedValues).filter(function (str) {\n      return str !== null;\n    }).map(function (str) {\n      return key + ':' + str;\n    }).join(';');\n    if (composed) {\n      styleObj[key] = styleObj[key] + ';' + composed;\n    }\n    //example do -> {display: \"flex;display:-webkit-flex;display:-ms-flexbox\"}\n  }\n\n  function valWithoutFlex() {\n    return val.replace('flex-', '').toLowerCase();\n  }\n  if (val === 'flex' && key === 'display') {\n    var flex = createObjectOfValuesWithPrefixes('flex');\n    if (flex.ms) {\n      flex.ms = flex.ms.replace('flex', 'flexbox');\n    } //special case\n\n    composePrefixedValues(flex);\n    //if(oldFlex){styleObj[key] = styleObj[key] + ';display:-webkit-box'; }\n    if (oldFlex) {\n      styleObj[key] = '-webkit-box;display:' + styleObj[key];\n    }\n\n    //display:flex is simple case, no need for other checks\n    return styleObj;\n  }\n  var allPrefixedCssValues = Object.keys(neededCssValues).filter(function (c) {\n    return c !== 'flex';\n  }).reduce(function (o, c) {\n    o[c] = createObjectOfValuesWithPrefixes(c);\n    return o;\n  }, {});\n  /*\n   example allPrefixedCssValues = {\n   calc: {\n   webkit: \"translateX(-webkit-calc(10% - 10px))\",\n   moz: \"translateX(-moz-calc(10% - 10px))\"\n   },\n   flex: {\n   ms: null,\n   webkit: null\n   }\n   };*/\n\n  //if(includes(val, 'gradient')){\n  //\n  //}\n\n  if (neededRules[key]) {\n    var prefixes = allVendors ? neededRules[key] : neededRules[key].filter(function (vendor) {\n      return includes(clientPrefix, vendor);\n    });\n    var prefixedProperties = prefixes.reduce(function (obj, prefix) {\n      var property = val;\n\n      //add valueWithPrefixes in their position and null the property\n      Object.keys(allPrefixedCssValues).forEach(function (cssKey) {\n        var cssVal = allPrefixedCssValues[cssKey];\n        Object.keys(cssVal).forEach(function (vendor) {\n          if (cssVal[vendor] && capitalize(prefix) === capitalize(vendor)) {\n            property = cssVal[vendor];\n            cssVal[vendor] = null;\n          }\n        });\n      });\n      obj[prefix + capitalize(key)] = property;\n      return obj;\n    }, {});\n    if (oldFlex) {\n      switch (key) {\n        case 'flexDirection':\n          if (includes(val, 'reverse')) {\n            prefixedProperties.WebkitBoxDirection = 'reverse';\n          } else {\n            prefixedProperties.WebkitBoxDirection = 'normal';\n          }\n          if (includes(val, 'row')) {\n            prefixedProperties.WebkitBoxOrient = prefixedProperties.boxOrient = 'horizontal';\n          } else if (includes(val, 'column')) {\n            prefixedProperties.WebkitBoxOrient = 'vertical';\n          }\n          break;\n        case 'alignSelf':\n          prefixedProperties.msFlexItemAlign = valWithoutFlex();\n          break;\n        case 'alignItems':\n          prefixedProperties.WebkitBoxAlign = prefixedProperties.msFlexAlign = valWithoutFlex();\n          break;\n        case 'alignContent':\n          if (val === 'spaceAround') {\n            prefixedProperties.msFlexLinePack = 'distribute';\n          } else if (val === 'spaceBetween') {\n            prefixedProperties.msFlexLinePack = 'justify';\n          } else {\n            prefixedProperties.msFlexLinePack = valWithoutFlex();\n          }\n          break;\n        case 'justifyContent':\n          if (val === 'spaceAround') {\n            prefixedProperties.msFlexPack = 'distribute';\n          } else if (val === 'spaceBetween') {\n            prefixedProperties.WebkitBoxPack = prefixedProperties.msFlexPack = 'justify';\n          } else {\n            prefixedProperties.WebkitBoxPack = prefixedProperties.msFlexPack = valWithoutFlex();\n          }\n          break;\n        case 'flexBasis':\n          prefixedProperties.msFlexPreferredSize = val;\n          break;\n        case 'order':\n          prefixedProperties.msFlexOrder = '-moz-calc(' + val + ')'; //ugly hack to prevent react from adding 'px'\n          prefixedProperties.WebkitBoxOrdinalGroup = '-webkit-calc(' + (parseInt(val) + 1) + ')'; //this might not work for browsers who don't support calc\n          break;\n        case 'flexGrow':\n          prefixedProperties.WebkitBoxFlex = prefixedProperties.msFlexPositive = val;\n          break;\n        case 'flexShrink':\n          prefixedProperties.msFlexNegative = val;\n          break;\n        case 'flex':\n          prefixedProperties.WebkitBoxFlex = val;\n          break;\n      }\n    }\n    Object.assign(styleObj, prefixedProperties);\n  }\n\n  //if valueWithPrefixes were not added before\n  Object.keys(allPrefixedCssValues).forEach(function (cssKey) {\n    composePrefixedValues(allPrefixedCssValues[cssKey]);\n  });\n  return styleObj;\n}\nfunction autoPrefixer(obj, allVendors) {\n  Object.keys(obj).forEach(function (key) {\n    return obj = checkAndAddPrefix(_extends({}, obj), key, obj[key], allVendors);\n  });\n  return obj;\n}\nfunction gate(objOrBool) {\n  var optionalBoolean = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (typeof objOrBool === 'boolean') {\n    return function (obj) {\n      return autoPrefixer(obj, objOrBool);\n    };\n  }\n  if (!objOrBool) {\n    return {};\n  } else {\n    return autoPrefixer(objOrBool, optionalBoolean);\n  } // default: don't include all browsers\n}\n\nvar isBrowser = typeof window !== 'undefined';\nexport var autoprefix = gate(!isBrowser);","map":null,"metadata":{},"sourceType":"module"}